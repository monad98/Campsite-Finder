extends layout

block content
  h1 Campsite Finder
  p.lead Find an empty campsite for this weekend. Even if there is no empty campsite at the moment, you can find one here.
  p.lead We check an empty site of your favorite campground every few minutes and will let you know when we found an empty one.
  hr
  .row
    .col-sm-12
      if !user
        h2 You should login to use this service.
        p
          a.btn.btn-default(href='/login', role='button') LOGIN Â»
      div(class=user ? 'col-sm-2' : 'text-center')
        img(src='/img/camp.png' class=user ? 'small-img' : undefined)

      if user
        .col-sm-10
          form(method='POST' action='/api/find-campsite')
            input(type='hidden', name='_csrf', value=_csrf)
            .form-group
              label(for='campground') Gampground Name
              input#campground.form-control(type='text' name='campground' placeholder='Campground name' list='campgroundList')
              datalist#campgroundList
            .form-group
              label(for='date') Start Date 
              input#date.form-control(data-provide='datepicker' name='campingDate' data-date-start-date=dayAfterTomorrow data-date-today-highlight='true' data-date-autoclose='true' data-date-format="D M dd yyyy"
              data-date-orientation='bottom ' +
              'left')
            .form-group
              label(for='lengthOfStay') Length of Stay
              input#lengthOfStay.form-control(type='number' name='lengthOfStay' placeholder='Number' required)
            .form-group
              label(for='method') Site Type
              select#type.form-control(name='type')
                each type in [{name: 'Any Camping Site', value: 0}, { name: 'RV Sites', value: 2001}, {name: 'Trailer', value: 2002}, {name: 'Tent', value: 2003}, {name: 'Cabins or Lodgings', value: 10001}, {name: 'Group' + ' Sites', value: 9002}, {name: 'Day' + ' use', value: 9001}, {name: 'Horse sites', value: 3001}, {name: 'Boat sites', value: 2004}]
                  option(value=type.value) #{type.name}
            .form-group
              label(for='method') Notification Method
              select#notiMethod.form-control
                option(value='email') Email
                option(value='sms') SMS
            .form-group#emailForm
              label(for='email') Email address to be notified of empty sites
              input#email.form-control(type='email' name='email' placeholder='Your Email Address')
            //.form-group#phoneForm(style='display: none')
            //  label(for='phone') Mobile number to be notified of empty sites
            //  input#email.form-control(type='tel' name='phone' placeholder='Your Mobile Number')
            button#submit.btn.btn-default(type='submit') Submit
            br
            br

  script.

    //variable
    const campgroundListElem = document.querySelector('#campgroundList');

    //input debounce wrapper function
    const debounce = function (cb, delay) {
      let timeout;
      return (...args) => {
        let that = this;
        clearTimeout(timeout);
        timeout = setTimeout(() => {
          cb.apply(that, args);
        }, delay)
      }
    }

    //AJAX Call to server to get campsite list for autocomplete
    const getCampsiteList = (() => {
      let ajaxReq = null;
      return () => {
        const qs = $('#campground').val().trim();
        if(qs.length < 3) return;
        if(ajaxReq) {
          ajaxReq.abort();
          ajaxReq = null;
        }
        ajaxReq = $.ajax({
          type: 'GET',
          url: '/api/getCampsites',
          data: {qs}
        })
        .then(campgrounds => {
          ajaxReq = null;
          emptyNode(campgroundListElem);
          for(let i = 0, length = campgrounds.length; i < length; i++) {
            campgroundListElem.appendChild(makeOptionElem(campgrounds[i].name, campgrounds[i].state));
          }
        });
      }
    })();


    const emailForm = $('<div id="emailForm" class="form-group">')
      .append($('<label for="email">').html('Email address to be notified of empty sites'))
      .append($('<input id="email" class="form-control" type="email" name="email" placeholder="Your Email Address">'));

    const phoneForm = $('<div id="phoneForm" class="form-group">')
      .append($('<label for="phone">').html('Mobile number to be notified of empty sites. Only US mobile numbers are supported'))
      .append($('<input id="phone" class="form-control" type="tel" name="phone" placeholder="123-456-7890">'));

    const submitButton = $('button#submit');
    //Show and hide email and phone number form depending on user choice
    $('select#notiMethod').on('change', function () {
      const method = $(this).val();
      if(method === 'email') {
        submitButton.before(emailForm);
        $('#phoneForm').remove();
      } else {
        submitButton.before(phoneForm);
        $('#emailForm').remove();
      }
    })


    //eventlistener for autocomplete
    $('#campground').on('keyup', debounce(getCampsiteList, 400));

    //make option element
    function makeOptionElem(value, content) {
      const optionElem = document.createElement('option');
      optionElem.setAttribute("value", value);
      optionElem.innerHTML = content;
      return optionElem;
    }

    function emptyNode(node) {
      while(node.hasChildNodes()) {
        node.removeChild(node.firstChild);
      }
    }
    